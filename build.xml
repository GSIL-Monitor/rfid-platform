<?xml version="1.0" encoding="UTF-8"?>  
<project name="csrfid" default="starttomcat" basedir=".">
<property name="lib" value="${basedir}/WebRoot/WEB-INF/lib"/>
<property name="tomcat_home" value="D:/Tools/tomcat-csr4"/>
	<property name="tomcat_bin" value="D:/Tools/tomcat-csr4/bin"/>  
<!-- 定义属性，打成war包的名称。 -->  
<property name="warFileName" value="csr.war"></property>
<!-- 定义路径，编译java文件时用到的jar包。 -->  
<path id="project.lib">  
	<fileset dir="${basedir}/WebRoot/WEB-INF/lib">  
		<include name="**/*.jar"/>  
	</fileset>  
</path>  
<!-- 删除根目录下target 目录-->
<target name="clean target">
	<delete dir="target" quiet="true" />
</target>
<!--初始化相关目录-->
<target name="init target" depends="clean target">
	<mkdir dir="target/classes"/>
	<mkdir dir="target/test-classes"/>
	<mkdir dir="target/test-results"/>
</target>
<!-- 编译程序-->
<target name="compile target" depends="init target">	
	<path id="classpath">
		<fileset dir="${lib}">
			<include name="**/*.jar"/>
		</fileset>
	</path>
<!--target/classes文件夹 -->
	<javac srcdir="src" destdir="target/classes" debug="on" encoding="UTF-8" includeAntRuntime="false">
		<classpath refid="classpath"/>
	</javac>
	<copy todir="target/classes">
		<fileset dir="resources">
			<include name="**/*.properties"/>
			<include name="**/*.xml"/>
		</fileset>
	</copy>
<!--target/test-classes文件夹 -->
	<javac srcdir="test" destdir="target/test-classes" debug="on" encoding="UTF-8" includeAntRuntime="false">
		<classpath refid="classpath"/>
		<classpath>
			<pathelement location="target/classes"/>
		</classpath>
	</javac>
	<copy todir="target/test-classes">
		<fileset dir="test">
			<include name="**/*.xml"/>
			<include name="**/*.zip"/>
            <include name="**/*.properties"/>
		</fileset>
		<fileset dir="src">
			<include name="**/*.xml"/>
		</fileset>
		<fileset dir="resources">
			<include name="**/*.xml"/>
			<include name="**/*.properties"/>
		</fileset>		
	</copy>
	<copy todir="target/test-classes/test/casesoft/dmc">
		<fileset dir="test/test/casesoft/dmc">
			<include name="**/*.xls"/>
			<include name="**/*.xlsx"/>		         
		</fileset>
	</copy>
</target>
<!--进行自动化测试，依赖任务为compile,测试结果放在target/test-results目录下-->
<target name="test" depends="compile target" > 
	<junit haltonfailure="on" printsummary="on">
		<classpath refid="classpath"/>
		<classpath>
			<pathelement location="target/classes"/>
			<pathelement location="target/test-classes"/>
		</classpath>
	<formatter type="brief" usefile="false"/>
	<formatter type="xml"/>
	<batchtest todir="target/test-results" >
		<fileset dir="target/test-classes" includes="**/*Tests.class"/>
	</batchtest>
	</junit>  
	
	<junitreport todir="target/test-results">
		<fileset dir="target/test-results">
			<include name="TEST-*.xml" />
		</fileset>
		<report format="frames" todir="target/test-results" />
		</junitreport>
	
	<delete dir="target/test-results">  
				<include name="*.xml" />  
	</delete>
		
</target>
    
<!-- 打war包前，清空原有的class文件，创建新的build路径。 -->  
<target name="clean build" depends="test">  
	<delete dir="${basedir}/build" />  
	<mkdir dir="${basedir}/build" />  
</target>  
	
<!-- 编译src文件夹中的java文件，编译后的class文件放到创建的文件夹下。 -->  
<target name="compile build" depends="clean build">  
	<javac srcdir="${basedir}/src"  destdir="${basedir}/build" debug="on" includeantruntime="false"  encoding="UTF-8" fork="true" memoryinitialsize="256m" memorymaximumsize="256m">  
			<classpath refid="project.lib">
			</classpath>  
	</javac> 
	
	<copy todir="build">
		<fileset dir="resources">
			<include name="**/*.properties"/>
			<include name="**/*.xml"/>
			<include name="**/*.png"/>
		</fileset>
	</copy>
</target>  
	      
<!-- 定义默认任务，将class文件集合成jar包。 -->  
<target name="warFile" depends="compile build">  
<!-- 删除原有war包。 -->  
<delete dir="${basedir}/${warFileName}" />  
<!-- 建立新war包。 -->  
<war destfile="${basedir}/${warFileName}" webxml="${basedir}/WebRoot/WEB-INF/web.xml">  
<!-- 将非jar和非class文件拷贝到war包的对应路径下。 -->  
	<fileset dir="${basedir}/WebRoot">  
		<include name="**/**.*" />  
		<exclude name="**/*.jar"/>  
		<exclude name="**/*.class"/>
		<exclude name="**/*.zip"/>
	</fileset>  
<!-- 将jar和class文件拷贝到war包的对应路径下。 -->  
	<lib dir="${basedir}/WebRoot/WEB-INF/lib" />  
	<classes dir="${basedir}/build" />  
</war>  
</target>  
		
<!-- 定义任务，停止tomcat服务-->  
<target name="stop tomcat">   
	    <exec dir="${tomcat_bin}" executable="cmd.exe">      
	        <arg line="/c shutdown.bat" />    
	    </exec>    
</target>	
<!-- 定义任务，把war包copy到tomcat目录下的webapps下 -->  
<target name="copytotomcat" depends="warFile">
	<copy file="${basedir}/${warFileName}" todir="${tomcat_home}/webapps"/>  
</target>  
		
<!-- 定义任务，启动tomcat服务-->  
<target name="starttomcat">  
	<exec dir="${tomcat_bin}" executable="cmd.exe">      
		        <arg line="/c startup.bat" />    
		    </exec>   
</target>  
	
</project>  