select  sale.day as stockDay,
 (case when fitting.OWNERID is null then sale.ownerId else fitting.OWNERID end) as stockCode,
(case when sale.sku is null then fitting.SKU else sale.sku end) as sku,
(case when sale.styleId is null then fitting.styleId else sale.styleId end) as styleId,
(case when sale.colorId is null then fitting.colorId else sale.colorId end) as colorId,
(case when sale.sizeId is null then fitting.sizeId else sale.sizeId end) as sizeId,
fitting.fittingqty fittingqty,
sale.saleqty,sale.actprice,sale.backQty,sale.backprice,sale.avgpercent,
sale.stockQty,sale.INDATE,sale.lastestFittingDate,sale.lastestSaleDate,
sale.stockPrice,sale.styleName,sale.sizeName,sale.colorName,
 sale.class1, sale.class2, sale.class3, sale.class4, sale.class10,
case when sale.INDATE is not null then TRUNC(TO_DATE(sale.day, 'YYYY-MM-DD ')-TO_DATE(to_char(sale.INDATE,'yyyy-mm-dd'), 'YYYY-MM-DD ')) else 0 end as indays

fromUser
--计算试衣
(select to_char(scantime,'yyyy-mm-dd') fittingDate,ownerId,SKU,STYLEID,COLORID,sizeId,count(*) fittingqty
fromUser SHOP_FITTINGRECORD
group by to_char(scantime,'yyyy-mm-dd'),ownerId,SKU,STYLEID,COLORID,sizeId) fitting 
right join
 (select stock.day day,
 (case when sale.OWNERID is null then stock.STOCKCODE else sale.OWNERID end) as ownerId,
(case when sale.CODE is null then stock.SKU else sale.CODE end) as sku,
(case when sale.styleId is null then stock.styleId else sale.styleId end) as styleId,
(case when sale.colorId is null then stock.colorId else sale.colorId end) as colorId,
(case when sale.sizeId is null then stock.sizeId else sale.sizeId end) as sizeId,
sale.saleqty,sale.actprice,sale.backQty,sale.backprice,sale.avgpercent,
stock.QTY stockQty,stock.INDATE,stock.lastestFittingDate,stock.lastestSaleDate,
stock.stockPrice,stock.styleName,stock.sizeName,stock.colorName,
 stock.class1, stock.class2, stock.class3, stock.class4, stock.class10

fromUser
--库存
--THIRD_daySTOCK stock 
( select stock.*,sale.lastestSaleDate fromUser (select stock.*,lastestFitting.lastestFittingDate fromUser (select ownerId,sku,max(to_char(scantime,'yyyy-mm-dd')) lastestFittingDate fromUser SHOP_FITTINGRECORD
 
 group by ownerId,sku) lastestFitting right JOIN
 (select stock.*,(PRODUCT_STYLE.PRICE*stock.qty) as stockPrice,PRODUCT_STYLE.styleName as styleName,product_color.COLORNAME as colorName,PRODUCT_SIZE.sizeName as sizeName,PRODUCT_STYLE.PRICE,
 PRODUCT_STYLE.class1, PRODUCT_STYLE.class2, PRODUCT_STYLE.class3, PRODUCT_STYLE.class4, PRODUCT_STYLE.class10
 fromUser  THIRD_daySTOCK stock,PRODUCT_STYLE,PRODUCT_SIZE ,product_color
 where stock.styleId= PRODUCT_STYLE.id and stock.colorId=product_color.id and stock.sizeId=PRODUCT_SIZE.id) stock
on stock.STOCKCODE =lastestFitting.ownerId and stock.sku=lastestFitting.sku) stock left join
(select bill.OWNERID,dtl.code,max(to_char(bill.billdate,'yyyy-mm-dd')) lastestSaleDate fromUser SHOP_SALEBILL bill,SHOP_SALEBILLdtl dtl where bill.billno=dtl.billno
group by  bill.OWNERID,dtl.CODE) sale on sale.OWNERID=stock.STOCKCODE and sale.code=stock.sku ) stock

left  JOIN 
--销售统计
(select to_char(bill.billdate,'yyyy-mm-dd') saleDate, bill.OWNERID,bill.CODE,bill.STYLEID,bill.COLORID,bill.sizeId,
sum(case when bill.QTY > 0 then bill.QTY else 0 end) saleqty,
sum(case when bill.ActPrice > 0 then bill.ActPrice else 0 end) actprice,
sum(case when bill.QTY < 0 then bill.QTY else 0 end) as backQty,
sum(case when bill.ActPrice < 0 then bill.ActPrice else 0 end) backprice,
trunc(avg(bill.percent),2) avgpercent
fromUser (select bill.billdate,bill.ownerId,dtl.code,dtl.styleid,dtl.colorId,dtl.sizeId,dtl.qty,dtl.actprice,dtl.percent fromUser SHOP_SALEBILL bill,SHOP_SALEBILLdtl dtl where bill.billno=dtl.billno) bill
group by to_char(bill.billdate,'yyyy-mm-dd'), bill.OWNERID,bill.CODE,bill.STYLEID,bill.COLORID,bill.sizeId) sale 

on (sale.OWNERID=stock.STOCKCODE and sale.saledate=stock.day and sale.CODE=stock.SKU)) sale
on （sale.OWNERID=fitting.OWNERID  and fitting.SKU=sale.SKU and fitting.fittingDate=sale.day）